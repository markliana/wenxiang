import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.shape.Ellipse;
import javafx.scene.shape.Line;
import javafx.stage.Stage;
import javafx.scene.layout.*;




public class Main extends Application{
    private char whoseTurn = 'x';
    private Cell[][] cell = new Cell[3][3];
    private Label lblStatus = new Label("X's turn to play");

    @Override
    public void start(Stage stage){
    GridPane gridPane = new GridPane();

    for(int i =0;i<3;i++)
        for(int j = 0;j<3;j++)
            gridPane.add(cell[i][j] = new Cell(),i,j);

    BorderPane borderPane = new BorderPane();
    borderPane.setCenter(gridPane);
    borderPane.setBottom(lblStatus);
    Scene scene = new Scene(borderPane,450,170);
    stage.setTitle("TicTacToe");
    stage.setScene(scene);
    stage.show();
    
    }
    public boolean isFull(){
        for(int i =0;i<3;i++)
            for(int j = 0;j<3;j++)
                if(cell[i][j].getToken() == ' ')
                    return false;
        return true;
    }
    public boolean isWon(char token){
        for(int i =0; i<3;i++)
            if(cell[i][0].getToken()==token
                    &&cell[i][1].getToken() == token
                    &&cell[i][2].getToken() ==token){
            return true;
            }

            for(int j = 0;j<3;j++)
                if(cell[0][j].getToken()==token
                        &&cell[1][j].getToken()==token
                        &&cell[2][j].getToken()==token){
            return true;
                }

            if(cell[0][0].getToken()==token
                    &&cell[1][1].getToken()==token
                    &&cell[2][2].getToken()==token){
            return true;
            }

            if(cell[0][2].getToken()==token
                    &&cell[1][1].getToken()==token
                    &&cell[2][0].getToken()==token){
            return true;
            }
            return false;
    }
    class Cell extends Pane{
       private char Token = ' ';

       public Cell(){
           setStyle("-fx-border-color: black");
           this.setPrefSize(2000,2000);
           this.setOnMouseClicked(e-> handleMouseClick());
       }

        public char getToken() {
            return Token;
        }

        public void setToken(char token) {
            Token = token;
            if(Token == 'x'){
                Line line = new Line(10,10,this.getWidth()-10,this.getHeight()-10);


                line.endXProperty().bind(this.widthProperty().subtract(10));
                line.endYProperty().bind(this.heightProperty().subtract(10));

                Line line1 = new Line(10,this.getHeight()-10,this.getWidth()-10,10);

                line1.startYProperty().bind(this.heightProperty().subtract(10));
                line1.endXProperty().bind(this.widthProperty().subtract(10));

                this.getChildren().addAll(line,line1);

            }else if (Token =='0'){
                Ellipse ellipse = new Ellipse(this.getWidth()/2,this.getHeight()/2,this.getWidth()/2-10,this.getHeight()/2-10);

                ellipse.centerXProperty().bind(this.widthProperty().divide(2));
                ellipse.centerYProperty().bind(this.heightProperty().divide(2));
                ellipse.radiusXProperty().bind(this.widthProperty().divide(2).subtract(10));
                ellipse.radiusYProperty().bind(this.heightProperty().divide(2).subtract(10));

                this.getChildren().add(ellipse);
            }
        }
        private void handleMouseClick(){
           if(Token==' '&& whoseTurn != ' '){
               setToken(whoseTurn);
               if(isWon(whoseTurn)){
                   lblStatus.setText(whoseTurn +" Won! The game is over");
                   whoseTurn = ' ';
               }
               else if(isFull()){
                   lblStatus.setText("Draw! The game is over");
               }
               else {
                   whoseTurn = (whoseTurn == 'x')? '0':'x';
                   lblStatus.setText(whoseTurn + " 's turn");
               }
           }
        }
    }
}
